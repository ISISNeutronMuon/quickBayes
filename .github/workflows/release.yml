name: Build and upload to PyPI

on:
  release:
    types:
        - published
  pull_request:
    branches:
        - main
jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        env:
          # List of platforms to build on (incl. Python version)
          CIBW_BUILD: cp3{8,9,10}-manylinux_x86_64 cp3{8,9,10}-win_amd64 cp3{8,9,10}-macosx_x86_64 cp38-macosx_arm64

          CIBW_BEFORE_BUILD: >
             pip install numpy cython>=0.29.32 scipy

          # Install test dependencies and run tests
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: >
            pytest {project}/test
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: mint API token
         id: mint-token
         run: |
           # retrieve the ambient OIDC token
           resp=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
             "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=pypi")
           oidc_token=$(jq '.value' <<< "${resp}")

           # exchange the OIDC token for an API token
           resp=$(curl -X POST https://pypi.org/_/oidc/github/mint-token -d "{\"token\": \"${oidc_token}\"}")
           api_token=$(jq '.token' <<< "${resp}")

           # mask the newly minted API token, so that we don't accidentally leak it
           echo "::add-mask::${api_token}"

           # see the next step in the workflow for an example of using this step output
           echo "api-token=${api_token}" >> "${GITHUB_OUTPUT}"

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish package distribution to PYPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          password: ${{ steps.mint-token.outputs.api-token }}
